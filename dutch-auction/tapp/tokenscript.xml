<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ts:token xmlns:ts="http://tokenscript.org/2024/01/tokenscript"
		  xmlns:xml="http://www.w3.org/XML/1998/namespace"
		  xsi:schemaLocation="http://tokenscript.org/2024/01/tokenscript https://www.tokenscript.org/schemas/2024-01/tokenscript.xsd"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xmlns:ethereum="urn:ethereum:constantinople"
		  name="Morchi-Auction">
	<ts:label>
		<ts:plurals xml:lang="en">
			<ts:string quantity="one">Morchi Auction</ts:string>
		</ts:plurals>
	</ts:label>
	<ts:meta>
		<ts:description xml:lang="en">Trade Morchi NFT with Dutch Auction</ts:description>
		<ts:aboutUrl xml:lang="en">https://morchi.mooar.com/</ts:aboutUrl>
		<ts:iconUrl xml:lang="en">https://resources.smartlayer.network/smart-token-store/images/morchi.png</ts:iconUrl>
		<ts:env name="CONTRACT_ADDRESS">$tst{CONTRACT_ADDRESS}</ts:env>
		<ts:env name="CONTRACT_CHAIN">$tst{CONTRACT_CHAIN}</ts:env>
	</ts:meta>
	<ts:contract interface="erc721" name="Token">
		<ts:address network="$tst{CONTRACT_CHAIN}">$tst{CONTRACT_ADDRESS}</ts:address>
	</ts:contract>
	<ts:contract name="DVP">
		<ts:address network="$tst{CONTRACT_CHAIN}">$tst{DVP_CONTRACT_ADDRESS}</ts:address>
		<ts:abi>
			<![CDATA[
				[
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							}
						],
						"name": "AddressEmptyCode",
						"type": "error"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "implementation",
								"type": "address"
							}
						],
						"name": "ERC1967InvalidImplementation",
						"type": "error"
					},
					{
						"inputs": [],
						"name": "ERC1967NonPayable",
						"type": "error"
					},
					{
						"inputs": [],
						"name": "FailedInnerCall",
						"type": "error"
					},
					{
						"inputs": [],
						"name": "InvalidInitialization",
						"type": "error"
					},
					{
						"inputs": [],
						"name": "NotInitializing",
						"type": "error"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							}
						],
						"name": "OwnableInvalidOwner",
						"type": "error"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "account",
								"type": "address"
							}
						],
						"name": "OwnableUnauthorizedAccount",
						"type": "error"
					},
					{
						"inputs": [],
						"name": "ReentrancyGuardReentrantCall",
						"type": "error"
					},
					{
						"inputs": [],
						"name": "UUPSUnauthorizedCallContext",
						"type": "error"
					},
					{
						"inputs": [
							{
								"internalType": "bytes32",
								"name": "slot",
								"type": "bytes32"
							}
						],
						"name": "UUPSUnsupportedProxiableUUID",
						"type": "error"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": false,
								"internalType": "uint64",
								"name": "version",
								"type": "uint64"
							}
						],
						"name": "Initialized",
						"type": "event"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": true,
								"internalType": "address",
								"name": "nftContract",
								"type": "address"
							},
							{
								"indexed": true,
								"internalType": "uint256",
								"name": "nftId",
								"type": "uint256"
							},
							{
								"indexed": false,
								"internalType": "address",
								"name": "seller",
								"type": "address"
							},
							{
								"indexed": false,
								"internalType": "uint256",
								"name": "startingPrice",
								"type": "uint256"
							},
							{
								"indexed": false,
								"internalType": "uint256",
								"name": "reservePrice",
								"type": "uint256"
							},
							{
								"indexed": false,
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"indexed": false,
								"internalType": "uint256",
								"name": "dropRatePerHour",
								"type": "uint256"
							}
						],
						"name": "NFTAuctionCreated",
						"type": "event"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": true,
								"internalType": "address",
								"name": "nftContract",
								"type": "address"
							},
							{
								"indexed": true,
								"internalType": "uint256",
								"name": "nftId",
								"type": "uint256"
							},
							{
								"indexed": false,
								"internalType": "address",
								"name": "buyer",
								"type": "address"
							},
							{
								"indexed": false,
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							}
						],
						"name": "NFTSold",
						"type": "event"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": true,
								"internalType": "address",
								"name": "previousOwner",
								"type": "address"
							},
							{
								"indexed": true,
								"internalType": "address",
								"name": "newOwner",
								"type": "address"
							}
						],
						"name": "OwnershipTransferred",
						"type": "event"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": false,
								"internalType": "string[]",
								"name": "",
								"type": "string[]"
							}
						],
						"name": "ScriptUpdate",
						"type": "event"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": true,
								"internalType": "address",
								"name": "implementation",
								"type": "address"
							}
						],
						"name": "Upgraded",
						"type": "event"
					},
					{
						"inputs": [],
						"name": "UPGRADE_INTERFACE_VERSION",
						"outputs": [
							{
								"internalType": "string",
								"name": "",
								"type": "string"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "",
								"type": "uint256"
							}
						],
						"name": "auctions",
						"outputs": [
							{
								"internalType": "address",
								"name": "nftContract",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nftId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "seller",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "startingPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "reservePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "dropRatePerHour",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "soldPrice",
								"type": "uint256"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "nftContract",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nftId",
								"type": "uint256"
							}
						],
						"name": "buyNFT",
						"outputs": [],
						"stateMutability": "payable",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "nftContract",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nftId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startingPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "reservePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "dropRatePerHour",
								"type": "uint256"
							}
						],
						"name": "createAuction",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "nftContract",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nftId",
								"type": "uint256"
							}
						],
						"name": "currentPrice",
						"outputs": [
							{
								"internalType": "uint256",
								"name": "",
								"type": "uint256"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [],
						"name": "initialize",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"inputs": [],
						"name": "owner",
						"outputs": [
							{
								"internalType": "address",
								"name": "",
								"type": "address"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [],
						"name": "proxiableUUID",
						"outputs": [
							{
								"internalType": "bytes32",
								"name": "",
								"type": "bytes32"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [],
						"name": "renounceOwnership",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"inputs": [],
						"name": "scriptURI",
						"outputs": [
							{
								"internalType": "string[]",
								"name": "",
								"type": "string[]"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "string[]",
								"name": "newScriptURI",
								"type": "string[]"
							}
						],
						"name": "setScriptURI",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "bytes4",
								"name": "interfaceId",
								"type": "bytes4"
							}
						],
						"name": "supportsInterface",
						"outputs": [
							{
								"internalType": "bool",
								"name": "",
								"type": "bool"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "newOwner",
								"type": "address"
							}
						],
						"name": "transferOwnership",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "newImplementation",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							}
						],
						"name": "upgradeToAndCall",
						"outputs": [],
						"stateMutability": "payable",
						"type": "function"
					}
				]
			]]>
		</ts:abi>
	</ts:contract>
	<ts:origins>
		<!-- Define the contract which holds the token that the user will use -->
		<ts:ethereum contract="Token"/>
	</ts:origins>

	<ts:cards>
		<ts:viewContent name="common" xmlns="http://www.w3.org/1999/xhtml">
			<ts:include type="html" src="./dist/index.html"/>
			<ts:include type="css" src="./src/styles.css"/>
		</ts:viewContent>

		<ts:card type="token" name="Buy">
			<ts:label>
				<ts:string xml:lang="en">Buy</ts:string>
			</ts:label>
			<ts:transaction>
				<ethereum:transaction contract="DVP" function="buy">
					<ts:data>
						<ts:uint256 ref="tokenId"/>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="buy" uiButton="false">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>
	</ts:cards>

</ts:token>
