<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ts:token xmlns:ts="http://tokenscript.org/2024/01/tokenscript"
		  xmlns:xml="http://www.w3.org/XML/1998/namespace"
		  xsi:schemaLocation="http://tokenscript.org/2024/01/tokenscript https://www.tokenscript.org/schemas/2024-01/tokenscript.xsd"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xmlns:ethereum="urn:ethereum:constantinople"
		  name="CareerExp">
	<ts:label>
		<ts:plurals xml:lang="en">
			<ts:string quantity="one">Career Exp Token</ts:string>
			<ts:string quantity="other">Career Exp Tokens</ts:string>
		</ts:plurals>
	</ts:label>
	<ts:meta>
		<ts:description xml:lang="en">Your glorious career experience as token</ts:description>
		<ts:aboutUrl xml:lang="en">https://viewer.tokenscript.org/</ts:aboutUrl>
		<ts:iconUrl xml:lang="en">https://resources.smartlayer.network/images/STL_Icon_Black.png</ts:iconUrl>
	</ts:meta>
	<ts:contract interface="erc721" name="Token">
		<ts:address network="$tst{CONTRACT_CHAIN}">$tst{CONTRACT_ADDRESS}</ts:address>
		<ts:abi>
			<![CDATA[
				[
					{
						"inputs":[
							{
								"internalType":"string",
								"name":"employerName",
								"type":"string"
							},
							{
								"internalType":"bytes",
								"name":"proof",
								"type":"bytes"
							}
						],
						"name":"claim",
						"outputs":[],
						"stateMutability":"nonpayable",
						"type":"function"
					},
					{
						"inputs":[
							{
								"internalType":"uint256",
								"name":"tokenId",
								"type":"uint256"
							}
						],
						"name":"endorse",
						"outputs":[],
						"stateMutability":"nonpayable",
						"type":"function"
					},
					{
						"anonymous":false,
						"inputs":[
							{
								"indexed":true,
								"internalType":"address",
								"name":"from",
								"type":"address"
							},
							{
								"indexed":true,
								"internalType":"address",
								"name":"to",
								"type":"address"
							},
							{
								"indexed":true,
								"internalType":"uint256",
								"name":"tokenId",
								"type":"uint256"
							}
						],
						"name":"Transfer",
						"type":"event"
					}
				]
			]]>
		</ts:abi>
	</ts:contract>
	<ts:origins>
		<!-- Define the contract which holds the token that the user will use -->
		<ts:ethereum contract="Token"/>
	</ts:origins>

	<ts:cards>
		<ts:viewContent name="common" xmlns="http://www.w3.org/1999/xhtml">
			<ts:include type="html" src="./dist/index.html"/>
			<ts:include type="css" src="./src/styles.css"/>
		</ts:viewContent>

		<ts:card type="action" name="Endorse">
			<ts:label>
				<ts:string xml:lang="en">Endorse</ts:string>
			</ts:label>
			<ts:transaction>
				<ethereum:transaction contract="Token" function="endorse">
					<ts:data>
						<ts:uint256 ref="tokenId"/>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="endorse">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

		<ts:card type="action" name="Claim">
			<ts:label>
				<ts:string xml:lang="en">Claim</ts:string>
			</ts:label>
			<ts:attribute name="employerName">
				<ts:type><ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax></ts:type>
				<ts:origins>
					<ts:user-entry as="bytes"/>
				</ts:origins>
			</ts:attribute>
			<ts:attribute name="proof">
				<ts:type><ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax></ts:type>
				<ts:origins>
					<ts:user-entry as="bytes"/>
				</ts:origins>
			</ts:attribute>
			<ts:transaction>
				<ethereum:transaction contract="Token" function="claim">
					<ts:data>
						<ts:string local-ref="employerName"/>
						<ts:bytes local-ref="proof"/>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="claim">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>
	</ts:cards>

</ts:token>
