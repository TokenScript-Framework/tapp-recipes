<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ts:token xmlns:ts="http://tokenscript.org/2024/01/tokenscript"
		  xmlns:xml="http://www.w3.org/XML/1998/namespace"
		  xsi:schemaLocation="http://tokenscript.org/2024/01/tokenscript https://www.tokenscript.org/schemas/2024-01/tokenscript.xsd"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xmlns:ethereum="urn:ethereum:constantinople"
		  name="$tst{TOKEN_NAME}">
	<ts:label>
		<ts:plurals xml:lang="en">
			<ts:string quantity="one">🎩 Instant $$tst{TOKEN_NAME} on Uniswap</ts:string>
		</ts:plurals>
	</ts:label>
	<ts:meta>
		<ts:description xml:lang="en">💎 The easiest way to ape into $$tst{TOKEN_NAME} • Instant buy with 0.0001 ETH 🚀</ts:description>
		<ts:aboutUrl xml:lang="en">https://www.smartlayer.network/</ts:aboutUrl>
	</ts:meta>
	<ts:contract interface="erc20" name="Token">
		<ts:address network="$tst{CONTRACT_CHAIN}">$tst{CONTRACT_ADDRESS}</ts:address>
		<ts:abi>
			<![CDATA[
				[
					{
						"constant": true,
						"inputs": [],
						"name": "name",
						"outputs": [
							{
								"name": "",
								"type": "string"
							}
						],
						"payable": false,
						"stateMutability": "view",
						"type": "function"
					},
					{
						"constant": false,
						"inputs": [
							{
								"name": "_spender",
								"type": "address"
							},
							{
								"name": "_value",
								"type": "uint256"
							}
						],
						"name": "approve",
						"outputs": [
							{
								"name": "",
								"type": "bool"
							}
						],
						"payable": false,
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"constant": true,
						"inputs": [],
						"name": "totalSupply",
						"outputs": [
							{
								"name": "",
								"type": "uint256"
							}
						],
						"payable": false,
						"stateMutability": "view",
						"type": "function"
					},
					{
						"constant": false,
						"inputs": [
							{
								"name": "_from",
								"type": "address"
							},
							{
								"name": "_to",
								"type": "address"
							},
							{
								"name": "_value",
								"type": "uint256"
							}
						],
						"name": "transferFrom",
						"outputs": [
							{
								"name": "",
								"type": "bool"
							}
						],
						"payable": false,
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"constant": true,
						"inputs": [],
						"name": "decimals",
						"outputs": [
							{
								"name": "",
								"type": "uint8"
							}
						],
						"payable": false,
						"stateMutability": "view",
						"type": "function"
					},
					{
						"constant": true,
						"inputs": [
							{
								"name": "_owner",
								"type": "address"
							}
						],
						"name": "balanceOf",
						"outputs": [
							{
								"name": "balance",
								"type": "uint256"
							}
						],
						"payable": false,
						"stateMutability": "view",
						"type": "function"
					},
					{
						"constant": true,
						"inputs": [],
						"name": "symbol",
						"outputs": [
							{
								"name": "",
								"type": "string"
							}
						],
						"payable": false,
						"stateMutability": "view",
						"type": "function"
					},
					{
						"constant": false,
						"inputs": [
							{
								"name": "_to",
								"type": "address"
							},
							{
								"name": "_value",
								"type": "uint256"
							}
						],
						"name": "transfer",
						"outputs": [
							{
								"name": "",
								"type": "bool"
							}
						],
						"payable": false,
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"constant": true,
						"inputs": [
							{
								"name": "_owner",
								"type": "address"
							},
							{
								"name": "_spender",
								"type": "address"
							}
						],
						"name": "allowance",
						"outputs": [
							{
								"name": "",
								"type": "uint256"
							}
						],
						"payable": false,
						"stateMutability": "view",
						"type": "function"
					},
					{
						"payable": true,
						"stateMutability": "payable",
						"type": "fallback"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": true,
								"name": "owner",
								"type": "address"
							},
							{
								"indexed": true,
								"name": "spender",
								"type": "address"
							},
							{
								"indexed": false,
								"name": "value",
								"type": "uint256"
							}
						],
						"name": "Approval",
						"type": "event"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": true,
								"name": "from",
								"type": "address"
							},
							{
								"indexed": true,
								"name": "to",
								"type": "address"
							},
							{
								"indexed": false,
								"name": "value",
								"type": "uint256"
							}
						],
						"name": "Transfer",
						"type": "event"
					}
				]
			]]>
		</ts:abi>
	</ts:contract>
	<ts:contract name="SwapRouter">
		<ts:address network="$tst{CONTRACT_CHAIN}">$tst{SWAP_ROUTER_ADDRESS}</ts:address>
		<ts:abi>
			<![CDATA[
				[
					{
					  "inputs": [],
					  "stateMutability": "nonpayable",
					  "type": "constructor"
					},
					{
					  "inputs": [],
					  "name": "InvalidInitialization",
					  "type": "error"
					},
					{
					  "inputs": [],
					  "name": "NotInitializing",
					  "type": "error"
					},
					{
					  "inputs": [
						{
						  "internalType": "address",
						  "name": "owner",
						  "type": "address"
						}
					  ],
					  "name": "OwnableInvalidOwner",
					  "type": "error"
					},
					{
					  "inputs": [
						{
						  "internalType": "address",
						  "name": "account",
						  "type": "address"
						}
					  ],
					  "name": "OwnableUnauthorizedAccount",
					  "type": "error"
					},
					{
					  "anonymous": false,
					  "inputs": [
						{
						  "indexed": true,
						  "internalType": "uint256",
						  "name": "swapId",
						  "type": "uint256"
						},
						{
						  "indexed": false,
						  "internalType": "address",
						  "name": "token",
						  "type": "address"
						},
						{
						  "indexed": false,
						  "internalType": "address[]",
						  "name": "senders",
						  "type": "address[]"
						},
						{
						  "indexed": false,
						  "internalType": "uint256",
						  "name": "totalFee",
						  "type": "uint256"
						}
					  ],
					  "name": "FeeDistributed",
					  "type": "event"
					},
					{
					  "anonymous": false,
					  "inputs": [
						{
						  "indexed": false,
						  "internalType": "address",
						  "name": "sender",
						  "type": "address"
						},
						{
						  "indexed": false,
						  "internalType": "address",
						  "name": "token",
						  "type": "address"
						},
						{
						  "indexed": false,
						  "internalType": "uint256",
						  "name": "amount",
						  "type": "uint256"
						}
					  ],
					  "name": "FeeWithdrawn",
					  "type": "event"
					},
					{
					  "anonymous": false,
					  "inputs": [
						{
						  "indexed": false,
						  "internalType": "uint64",
						  "name": "version",
						  "type": "uint64"
						}
					  ],
					  "name": "Initialized",
					  "type": "event"
					},
					{
					  "anonymous": false,
					  "inputs": [
						{
						  "indexed": true,
						  "internalType": "address",
						  "name": "previousOwner",
						  "type": "address"
						},
						{
						  "indexed": true,
						  "internalType": "address",
						  "name": "newOwner",
						  "type": "address"
						}
					  ],
					  "name": "OwnershipTransferred",
					  "type": "event"
					},
					{
					  "anonymous": false,
					  "inputs": [
						{
						  "indexed": true,
						  "internalType": "uint256",
						  "name": "swapId",
						  "type": "uint256"
						},
						{
						  "indexed": false,
						  "internalType": "address",
						  "name": "sender",
						  "type": "address"
						},
						{
						  "indexed": false,
						  "internalType": "uint256",
						  "name": "amountIn",
						  "type": "uint256"
						},
						{
						  "indexed": false,
						  "internalType": "uint256",
						  "name": "amountOut",
						  "type": "uint256"
						}
					  ],
					  "name": "SwapCompleted",
					  "type": "event"
					},
					{
					  "inputs": [],
					  "name": "CONTRACT_REWARD_PERCENTAGE",
					  "outputs": [
						{
						  "internalType": "uint256",
						  "name": "",
						  "type": "uint256"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [],
					  "name": "FEE_PERCENTAGE",
					  "outputs": [
						{
						  "internalType": "uint256",
						  "name": "",
						  "type": "uint256"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [],
					  "name": "MAX_SENDERS",
					  "outputs": [
						{
						  "internalType": "uint256",
						  "name": "",
						  "type": "uint256"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "address",
						  "name": "",
						  "type": "address"
						}
					  ],
					  "name": "contractFees",
					  "outputs": [
						{
						  "internalType": "uint256",
						  "name": "",
						  "type": "uint256"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "address",
						  "name": "tokenAddress",
						  "type": "address"
						},
						{
						  "internalType": "address",
						  "name": "sender",
						  "type": "address"
						}
					  ],
					  "name": "getFeeBalance",
					  "outputs": [
						{
						  "internalType": "uint256",
						  "name": "",
						  "type": "uint256"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "uint256",
						  "name": "swapId",
						  "type": "uint256"
						}
					  ],
					  "name": "getSenders",
					  "outputs": [
						{
						  "internalType": "address[]",
						  "name": "",
						  "type": "address[]"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "contract IV3SwapRouter",
						  "name": "_swapRouter",
						  "type": "address"
						}
					  ],
					  "name": "initialize",
					  "outputs": [],
					  "stateMutability": "nonpayable",
					  "type": "function"
					},
					{
					  "inputs": [],
					  "name": "owner",
					  "outputs": [
						{
						  "internalType": "address",
						  "name": "",
						  "type": "address"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [],
					  "name": "renounceOwnership",
					  "outputs": [],
					  "stateMutability": "nonpayable",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "address",
						  "name": "",
						  "type": "address"
						},
						{
						  "internalType": "address",
						  "name": "",
						  "type": "address"
						}
					  ],
					  "name": "senderFees",
					  "outputs": [
						{
						  "internalType": "uint256",
						  "name": "",
						  "type": "uint256"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "uint256",
						  "name": "",
						  "type": "uint256"
						},
						{
						  "internalType": "uint256",
						  "name": "",
						  "type": "uint256"
						}
					  ],
					  "name": "swapIdToSenders",
					  "outputs": [
						{
						  "internalType": "address",
						  "name": "",
						  "type": "address"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "uint256",
						  "name": "",
						  "type": "uint256"
						}
					  ],
					  "name": "swapIdTxCounter",
					  "outputs": [
						{
						  "internalType": "uint256",
						  "name": "",
						  "type": "uint256"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [],
					  "name": "swapRouter",
					  "outputs": [
						{
						  "internalType": "contract IV3SwapRouter",
						  "name": "",
						  "type": "address"
						}
					  ],
					  "stateMutability": "view",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "uint256",
						  "name": "swapId",
						  "type": "uint256"
						},
						{
						  "internalType": "address",
						  "name": "tokenIn",
						  "type": "address"
						},
						{
						  "internalType": "address",
						  "name": "tokenOut",
						  "type": "address"
						},
						{
						  "internalType": "uint24",
						  "name": "poolFee",
						  "type": "uint24"
						},
						{
						  "internalType": "address",
						  "name": "recipient",
						  "type": "address"
						},
						{
						  "internalType": "uint256",
						  "name": "amountIn",
						  "type": "uint256"
						},
						{
						  "internalType": "uint256",
						  "name": "amountOutMinimum",
						  "type": "uint256"
						},
						{
						  "internalType": "uint160",
						  "name": "sqrtPriceLimitX96",
						  "type": "uint160"
						}
					  ],
					  "name": "swapTokens",
					  "outputs": [
						{
						  "internalType": "uint256",
						  "name": "amountOut",
						  "type": "uint256"
						}
					  ],
					  "stateMutability": "nonpayable",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "address",
						  "name": "newOwner",
						  "type": "address"
						}
					  ],
					  "name": "transferOwnership",
					  "outputs": [],
					  "stateMutability": "nonpayable",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "address",
						  "name": "tokenAddress",
						  "type": "address"
						}
					  ],
					  "name": "withdrawContractBalance",
					  "outputs": [],
					  "stateMutability": "nonpayable",
					  "type": "function"
					},
					{
					  "inputs": [
						{
						  "internalType": "address",
						  "name": "tokenAddress",
						  "type": "address"
						}
					  ],
					  "name": "withdrawFee",
					  "outputs": [],
					  "stateMutability": "nonpayable",
					  "type": "function"
					},
					{
					  "stateMutability": "payable",
					  "type": "receive"
					}
				]
			]]>
		</ts:abi>
	</ts:contract>
	<ts:origins>
		<!-- Define the contract which holds the token that the user will use -->
		<ts:ethereum contract="Token"/>
	</ts:origins>

	<ts:cards>
		<ts:viewContent name="common" xmlns="http://www.w3.org/1999/xhtml">
			<ts:include type="html" src="./dist/index.html"/>
			<ts:include type="css" src="./src/styles.css"/>
		</ts:viewContent>

		<ts:card type="action" name="Buy">
			<ts:label>
				<ts:string xml:lang="en">Buy $$tst{TOKEN_NAME} Now 🦍</ts:string>
			</ts:label>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" uiButton="false">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

	</ts:cards>

	<ts:transaction name="exactInputSingle">
		<ethereum:transaction as="uint" contract="SwapRouter" function="swapTokens">
			<ts:data>
				<ts:uint256>1</ts:uint256>
				<ts:address local-ref="tokenIn"/>
				<ts:address local-ref="tokenOut"/>
				<ts:uint24 local-ref="fee"/>
				<ts:address ref="walletAddress"/>
				<ts:uint256 local-ref="amountIn"/>
				<ts:uint256 local-ref="amountOutMinimum"/>
				<ts:uint160 local-ref="sqrtPriceLimitX96"/>
			</ts:data>
			<ethereum:value local-ref="ethValue"/>
		</ethereum:transaction>
	</ts:transaction>

	<ts:transaction name="approveERC20">
		<ethereum:transaction as="uint" contract="Token" function="approve">
			<ts:data>
				<ts:address ref="contractAddress_SwapRouter"/>
				<ts:uint256 local-ref="approveAmt"/>
			</ts:data>
		</ethereum:transaction>
	</ts:transaction>
</ts:token>
